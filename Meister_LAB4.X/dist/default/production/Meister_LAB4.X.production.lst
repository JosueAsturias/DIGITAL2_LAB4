

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Feb 15 18:27:15 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.05
    15                           ; Generated 20/12/2018 GMT
    16                           ; 
    17                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0088                     	;# 
   244  0089                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  008F                     	;# 
   249  0090                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0094                     	;# 
   256  0095                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0098                     	;# 
   260  0099                     	;# 
   261  009A                     	;# 
   262  009B                     	;# 
   263  009C                     	;# 
   264  009D                     	;# 
   265  009E                     	;# 
   266  009F                     	;# 
   267  0105                     	;# 
   268  0107                     	;# 
   269  0108                     	;# 
   270  0109                     	;# 
   271  010C                     	;# 
   272  010C                     	;# 
   273  010D                     	;# 
   274  010E                     	;# 
   275  010F                     	;# 
   276  0185                     	;# 
   277  0187                     	;# 
   278  0188                     	;# 
   279  0189                     	;# 
   280  018C                     	;# 
   281  018D                     	;# 
   282  0000                     	;# 
   283  0001                     	;# 
   284  0002                     	;# 
   285  0003                     	;# 
   286  0004                     	;# 
   287  0005                     	;# 
   288  0006                     	;# 
   289  0007                     	;# 
   290  0008                     	;# 
   291  0009                     	;# 
   292  000A                     	;# 
   293  000B                     	;# 
   294  000C                     	;# 
   295  000D                     	;# 
   296  000E                     	;# 
   297  000E                     	;# 
   298  000F                     	;# 
   299  0010                     	;# 
   300  0011                     	;# 
   301  0012                     	;# 
   302  0013                     	;# 
   303  0014                     	;# 
   304  0015                     	;# 
   305  0015                     	;# 
   306  0016                     	;# 
   307  0017                     	;# 
   308  0018                     	;# 
   309  0019                     	;# 
   310  001A                     	;# 
   311  001B                     	;# 
   312  001B                     	;# 
   313  001C                     	;# 
   314  001D                     	;# 
   315  001E                     	;# 
   316  001F                     	;# 
   317  0081                     	;# 
   318  0085                     	;# 
   319  0086                     	;# 
   320  0087                     	;# 
   321  0088                     	;# 
   322  0089                     	;# 
   323  008C                     	;# 
   324  008D                     	;# 
   325  008E                     	;# 
   326  008F                     	;# 
   327  0090                     	;# 
   328  0091                     	;# 
   329  0092                     	;# 
   330  0093                     	;# 
   331  0093                     	;# 
   332  0093                     	;# 
   333  0094                     	;# 
   334  0095                     	;# 
   335  0096                     	;# 
   336  0097                     	;# 
   337  0098                     	;# 
   338  0099                     	;# 
   339  009A                     	;# 
   340  009B                     	;# 
   341  009C                     	;# 
   342  009D                     	;# 
   343  009E                     	;# 
   344  009F                     	;# 
   345  0105                     	;# 
   346  0107                     	;# 
   347  0108                     	;# 
   348  0109                     	;# 
   349  010C                     	;# 
   350  010C                     	;# 
   351  010D                     	;# 
   352  010E                     	;# 
   353  010F                     	;# 
   354  0185                     	;# 
   355  0187                     	;# 
   356  0188                     	;# 
   357  0189                     	;# 
   358  018C                     	;# 
   359  018D                     	;# 
   360                           
   361                           	psect	idataCOMMON
   362  0772                     __pidataCOMMON:	
   363                           
   364                           ;initializer for _order
   365  0772  3416               	retlw	22
   366  0014                     _SSPCON	set	20
   367  0019                     _TXREG	set	25
   368  001A                     _RCREG	set	26
   369  0018                     _RCSTAbits	set	24
   370  0006                     _PORTB	set	6
   371  0013                     _SSPBUF	set	19
   372  0094                     _SSPSTATbits	set	148
   373  0094                     _SSPSTAT	set	148
   374  0099                     _SPBRG	set	153
   375  0098                     _TXSTAbits	set	152
   376  0086                     _TRISB	set	134
   377  043B                     _TRISC3	set	1083
   378  043D                     _TRISC5	set	1085
   379  04A0                     _BF	set	1184
   380                           
   381                           ; #config settings
   382  0000                     
   383                           	psect	cinit
   384  07F5                     start_initialization:	
   385  07F5                     __initialization:	
   386                           
   387                           ; Initialize objects allocated to COMMON
   388  07F5  120A  118A  2772   	fcall	__pidataCOMMON	;fetch initializer
   389  07F8  00F9               	movwf	__pdataCOMMON& (0+127)
   390                           
   391                           ; Clear objects allocated to COMMON
   392  07F9  01F6               	clrf	__pbssCOMMON& (0+127)
   393  07FA  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   394  07FB  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   395  07FC                     end_of_initialization:	
   396                           ;End of C runtime variable initialization code
   397                           
   398  07FC                     __end_of__initialization:	
   399  07FC  0183               	clrf	3
   400  07FD  120A  118A  2F8D   	ljmp	_main	;jump to C main() function
   401                           
   402                           	psect	bssCOMMON
   403  0076                     __pbssCOMMON:	
   404  0076                     _bandera_enviar:	
   405  0076                     	ds	1
   406  0077                     _recibido_pot2:	
   407  0077                     	ds	1
   408  0078                     _recibido_pot1:	
   409  0078                     	ds	1
   410                           
   411                           	psect	dataCOMMON
   412  0079                     __pdataCOMMON:	
   413  0079                     _order:	
   414  0079                     	ds	1
   415                           
   416                           	psect	cstackCOMMON
   417  0070                     __pcstackCOMMON:	
   418  0070                     ?_SPI_init:	
   419  0070                     ?_SPI_write:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ??_SPI_write:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?_main:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     SPI_init@muestra:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     SPI_write@dato:	
   432                           ; 1 bytes @ 0x0
   433                           
   434                           
   435                           ; 1 bytes @ 0x0
   436  0070                     	ds	1
   437  0071                     SPI_init@idle:	
   438                           
   439                           ; 1 bytes @ 0x1
   440  0071                     	ds	1
   441  0072                     SPI_init@edge:	
   442                           
   443                           ; 1 bytes @ 0x2
   444  0072                     	ds	1
   445  0073                     ??_SPI_init:	
   446  0073                     SPI_init@modo:	
   447                           ; 1 bytes @ 0x3
   448                           
   449                           
   450                           ; 1 bytes @ 0x3
   451  0073                     	ds	1
   452  0074                     ??_main:	
   453                           
   454                           ; 1 bytes @ 0x4
   455  0074                     	ds	2
   456                           
   457                           	psect	maintext
   458  078D                     __pmaintext:	
   459 ;;
   460 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   461 ;;
   462 ;; *************** function _main *****************
   463 ;; Defined at:
   464 ;;		line 35 in file "MasterMain.c"
   465 ;; Parameters:    Size  Location     Type
   466 ;;		None
   467 ;; Auto vars:     Size  Location     Type
   468 ;;		None
   469 ;; Return value:  Size  Location     Type
   470 ;;                  1    wreg      void 
   471 ;; Registers used:
   472 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   473 ;; Tracked objects:
   474 ;;		On entry : B00/0
   475 ;;		On exit  : 0/0
   476 ;;		Unchanged: 0/0
   477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   478 ;;      Params:         0       0       0       0       0
   479 ;;      Locals:         0       0       0       0       0
   480 ;;      Temps:          2       0       0       0       0
   481 ;;      Totals:         2       0       0       0       0
   482 ;;Total ram usage:        2 bytes
   483 ;; Hardware stack levels required when called:    1
   484 ;; This function calls:
   485 ;;		_SPI_init
   486 ;;		_SPI_write
   487 ;; This function is called by:
   488 ;;		Startup code after reset
   489 ;; This function uses a non-reentrant model
   490 ;;
   491                           
   492                           
   493                           ;psect for function _main
   494  078D                     _main:	
   495                           
   496                           ;MasterMain.c: 36:     TRISB = 0;
   497                           
   498                           ;incstack = 0
   499                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   500  078D  1683               	bsf	3,5	;RP0=1, select bank1
   501  078E  1303               	bcf	3,6	;RP1=0, select bank1
   502  078F  0186               	clrf	6	;volatile
   503                           
   504                           ;MasterMain.c: 37:     SPI_init(SPI_MASTER_4,SPI_SAMPLE_MID,SPI_CLK_IDLE_LOW,SPI_IDLE_TO
      +                          _ACTIVE);
   505  0790  01F0               	clrf	SPI_init@muestra
   506  0791  01F1               	clrf	SPI_init@idle
   507  0792  01F2               	clrf	SPI_init@edge
   508  0793  3020               	movlw	32
   509  0794  120A  118A  2779  120A  118A  	fcall	_SPI_init
   510  0799  2FE4               	goto	l863
   511  079A                     l833:	
   512                           
   513                           ;MasterMain.c: 42:                 if (!bandera_enviar){
   514  079A  0876               	movf	_bandera_enviar,w
   515  079B  1D03               	btfss	3,2
   516  079C  2FAE               	goto	l841
   517                           
   518                           ;MasterMain.c: 43:                     SPI_write(order);
   519  079D  0879               	movf	_order,w
   520  079E  120A  118A  2773  120A  118A  	fcall	_SPI_write
   521                           
   522                           ;MasterMain.c: 44:                     _delay((unsigned long)((10)*(4000000/4000.0)));
   523  07A3  300D               	movlw	13
   524  07A4  00F5               	movwf	??_main+1
   525  07A5  30FB               	movlw	251
   526  07A6  00F4               	movwf	??_main
   527  07A7                     u207:	
   528  07A7  0BF4               	decfsz	??_main,f
   529  07A8  2FA7               	goto	u207
   530  07A9  0BF5               	decfsz	??_main+1,f
   531  07AA  2FA7               	goto	u207
   532  07AB  2FAC               	nop2
   533                           
   534                           ;MasterMain.c: 45:                     bandera_enviar = 1;
   535  07AC  01F6               	clrf	_bandera_enviar
   536  07AD  0AF6               	incf	_bandera_enviar,f
   537  07AE                     l841:	
   538                           
   539                           ;MasterMain.c: 47:                 if(BF){
   540  07AE  1683               	bsf	3,5	;RP0=1, select bank1
   541  07AF  1303               	bcf	3,6	;RP1=0, select bank1
   542  07B0  1C14               	btfss	20,0	;volatile
   543  07B1  2FE0               	goto	l865
   544                           
   545                           ;MasterMain.c: 48:                     recibido_pot1 = SSPBUF;
   546  07B2  1283               	bcf	3,5	;RP0=0, select bank0
   547  07B3  1303               	bcf	3,6	;RP1=0, select bank0
   548  07B4  0813               	movf	19,w	;volatile
   549  07B5  00F4               	movwf	??_main
   550  07B6  0874               	movf	??_main,w
   551  07B7  00F8               	movwf	_recibido_pot1
   552                           
   553                           ;MasterMain.c: 49:                     order = 66;
   554  07B8  3042               	movlw	66
   555  07B9                     L1:	
   556  07B9  00F4               	movwf	??_main
   557  07BA  0874               	movf	??_main,w
   558  07BB  00F9               	movwf	_order
   559                           
   560                           ;MasterMain.c: 50:                     bandera_enviar = 0;
   561  07BC  01F6               	clrf	_bandera_enviar
   562  07BD  2FE0               	goto	l865
   563  07BE                     l847:	
   564                           
   565                           ;MasterMain.c: 54:                 if(!bandera_enviar){
   566  07BE  0876               	movf	_bandera_enviar,w
   567  07BF  1D03               	btfss	3,2
   568  07C0  2FD2               	goto	l855
   569                           
   570                           ;MasterMain.c: 55:                     SPI_write(order);
   571  07C1  0879               	movf	_order,w
   572  07C2  120A  118A  2773  120A  118A  	fcall	_SPI_write
   573                           
   574                           ;MasterMain.c: 56:                     _delay((unsigned long)((10)*(4000000/4000.0)));
   575  07C7  300D               	movlw	13
   576  07C8  00F5               	movwf	??_main+1
   577  07C9  30FB               	movlw	251
   578  07CA  00F4               	movwf	??_main
   579  07CB                     u217:	
   580  07CB  0BF4               	decfsz	??_main,f
   581  07CC  2FCB               	goto	u217
   582  07CD  0BF5               	decfsz	??_main+1,f
   583  07CE  2FCB               	goto	u217
   584  07CF  2FD0               	nop2
   585                           
   586                           ;MasterMain.c: 57:                     bandera_enviar = 1;
   587  07D0  01F6               	clrf	_bandera_enviar
   588  07D1  0AF6               	incf	_bandera_enviar,f
   589  07D2                     l855:	
   590                           
   591                           ;MasterMain.c: 59:                 if(BF){
   592  07D2  1683               	bsf	3,5	;RP0=1, select bank1
   593  07D3  1303               	bcf	3,6	;RP1=0, select bank1
   594  07D4  1C14               	btfss	20,0	;volatile
   595  07D5  2FE0               	goto	l865
   596                           
   597                           ;MasterMain.c: 60:                     recibido_pot2 = SSPBUF;
   598  07D6  1283               	bcf	3,5	;RP0=0, select bank0
   599  07D7  1303               	bcf	3,6	;RP1=0, select bank0
   600  07D8  0813               	movf	19,w	;volatile
   601  07D9  00F4               	movwf	??_main
   602  07DA  0874               	movf	??_main,w
   603  07DB  00F7               	movwf	_recibido_pot2
   604                           
   605                           ;MasterMain.c: 61:                     order = 22;
   606  07DC  3016               	movlw	22
   607  07DD  2FB9               	goto	L1
   608  07DE                     l861:	
   609                           
   610                           ;MasterMain.c: 66:                 recibido_pot1 = 0;
   611  07DE  01F8               	clrf	_recibido_pot1
   612                           
   613                           ;MasterMain.c: 67:                 recibido_pot2 = 0;
   614  07DF  01F7               	clrf	_recibido_pot2
   615  07E0                     l865:	
   616                           ;MasterMain.c: 68:         }
   617                           
   618                           
   619                           ;MasterMain.c: 69:         PORTB = recibido_pot2;
   620  07E0  0877               	movf	_recibido_pot2,w
   621  07E1  1283               	bcf	3,5	;RP0=0, select bank0
   622  07E2  1303               	bcf	3,6	;RP1=0, select bank0
   623  07E3  0086               	movwf	6	;volatile
   624  07E4                     l863:	
   625  07E4  0879               	movf	_order,w
   626  07E5  00F4               	movwf	??_main
   627  07E6  01F5               	clrf	??_main+1
   628                           
   629                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   630                           ; Switch size 1, requested type "simple"
   631                           ; Number of cases is 1, Range of values is 0 to 0
   632                           ; switch strategies available:
   633                           ; Name         Instructions Cycles
   634                           ; simple_byte            4     3 (average)
   635                           ; direct_byte           11     8 (fixed)
   636                           ; jumptable            260     6 (fixed)
   637                           ;	Chosen strategy is simple_byte
   638  07E7  0875               	movf	??_main+1,w
   639  07E8  3A00               	xorlw	0	; case 0
   640  07E9  1903               	skipnz
   641  07EA  2FEC               	goto	l903
   642  07EB  2FDE               	goto	l861
   643  07EC                     l903:	
   644                           
   645                           ; Switch size 1, requested type "simple"
   646                           ; Number of cases is 2, Range of values is 22 to 66
   647                           ; switch strategies available:
   648                           ; Name         Instructions Cycles
   649                           ; simple_byte            7     4 (average)
   650                           ; direct_byte          146    11 (fixed)
   651                           ; jumptable            263     9 (fixed)
   652                           ;	Chosen strategy is simple_byte
   653  07EC  0874               	movf	??_main,w
   654  07ED  3A16               	xorlw	22	; case 22
   655  07EE  1903               	skipnz
   656  07EF  2F9A               	goto	l833
   657  07F0  3A54               	xorlw	84	; case 66
   658  07F1  1903               	skipnz
   659  07F2  2FBE               	goto	l847
   660  07F3  2FDE               	goto	l861
   661  07F4  2FE0               	goto	l865
   662  07F5                     __end_of_main:	
   663                           
   664                           	psect	text1
   665  0773                     __ptext1:	
   666 ;; *************** function _SPI_write *****************
   667 ;; Defined at:
   668 ;;		line 28 in file "SPI.c"
   669 ;; Parameters:    Size  Location     Type
   670 ;;  dato            1    wreg     unsigned char 
   671 ;; Auto vars:     Size  Location     Type
   672 ;;  dato            1    0[COMMON] unsigned char 
   673 ;; Return value:  Size  Location     Type
   674 ;;                  1    wreg      void 
   675 ;; Registers used:
   676 ;;		wreg
   677 ;; Tracked objects:
   678 ;;		On entry : 0/0
   679 ;;		On exit  : 0/0
   680 ;;		Unchanged: 0/0
   681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   682 ;;      Params:         0       0       0       0       0
   683 ;;      Locals:         1       0       0       0       0
   684 ;;      Temps:          0       0       0       0       0
   685 ;;      Totals:         1       0       0       0       0
   686 ;;Total ram usage:        1 bytes
   687 ;; Hardware stack levels used:    1
   688 ;; This function calls:
   689 ;;		Nothing
   690 ;; This function is called by:
   691 ;;		_main
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           
   696                           ;psect for function _SPI_write
   697  0773                     _SPI_write:	
   698                           
   699                           ;incstack = 0
   700                           ; Regs used in _SPI_write: [wreg]
   701                           ;SPI_write@dato stored from wreg
   702  0773  00F0               	movwf	SPI_write@dato
   703                           
   704                           ;SPI.c: 29:     SSPBUF = dato;
   705  0774  0870               	movf	SPI_write@dato,w
   706  0775  1283               	bcf	3,5	;RP0=0, select bank0
   707  0776  1303               	bcf	3,6	;RP1=0, select bank0
   708  0777  0093               	movwf	19	;volatile
   709  0778  0008               	return
   710  0779                     __end_of_SPI_write:	
   711                           
   712                           	psect	text2
   713  0779                     __ptext2:	
   714 ;; *************** function _SPI_init *****************
   715 ;; Defined at:
   716 ;;		line 14 in file "SPI.c"
   717 ;; Parameters:    Size  Location     Type
   718 ;;  modo            1    wreg     enum E1292
   719 ;;  muestra         1    0[COMMON] enum E1300
   720 ;;  idle            1    1[COMMON] enum E1304
   721 ;;  edge            1    2[COMMON] enum E1308
   722 ;; Auto vars:     Size  Location     Type
   723 ;;  modo            1    3[COMMON] enum E1292
   724 ;; Return value:  Size  Location     Type
   725 ;;                  1    wreg      void 
   726 ;; Registers used:
   727 ;;		wreg, status,2, status,0
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   733 ;;      Params:         3       0       0       0       0
   734 ;;      Locals:         1       0       0       0       0
   735 ;;      Temps:          0       0       0       0       0
   736 ;;      Totals:         4       0       0       0       0
   737 ;;Total ram usage:        4 bytes
   738 ;; Hardware stack levels used:    1
   739 ;; This function calls:
   740 ;;		Nothing
   741 ;; This function is called by:
   742 ;;		_main
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746                           
   747                           ;psect for function _SPI_init
   748  0779                     _SPI_init:	
   749                           
   750                           ;incstack = 0
   751                           ; Regs used in _SPI_init: [wreg+status,2+status,0]
   752                           ;SPI_init@modo stored from wreg
   753  0779  00F3               	movwf	SPI_init@modo
   754                           
   755                           ;SPI.c: 14: void SPI_init(spi_modo modo, spi_sample muestra, spi_clk_idle idle,;SPI.c: 1
      +                          5:               spi_transmit_edge edge){;SPI.c: 16:     TRISC5 = 0;
   756  077A  1683               	bsf	3,5	;RP0=1, select bank1
   757  077B  1303               	bcf	3,6	;RP1=0, select bank1
   758  077C  1287               	bcf	7,5	;volatile
   759                           
   760                           ;SPI.c: 17:     if (modo & 0x04){
   761  077D  1D73               	btfss	SPI_init@modo,2
   762  077E  2F83               	goto	l825
   763                           
   764                           ;SPI.c: 18:         SSPSTAT = edge;
   765  077F  0872               	movf	SPI_init@edge,w
   766  0780  0094               	movwf	20	;volatile
   767                           
   768                           ;SPI.c: 19:         TRISC3 = 1;
   769  0781  1587               	bsf	7,3	;volatile
   770                           
   771                           ;SPI.c: 20:     }
   772  0782  2F87               	goto	l87
   773  0783                     l825:	
   774                           
   775                           ;SPI.c: 22:         SSPSTAT = muestra | edge;
   776  0783  0870               	movf	SPI_init@muestra,w
   777  0784  0472               	iorwf	SPI_init@edge,w
   778  0785  0094               	movwf	20	;volatile
   779                           
   780                           ;SPI.c: 23:         TRISC3 = 0;
   781  0786  1187               	bcf	7,3	;volatile
   782  0787                     l87:	
   783                           ;SPI.c: 24:     }
   784                           
   785                           
   786                           ;SPI.c: 25:     SSPCON = modo | idle;
   787  0787  0873               	movf	SPI_init@modo,w
   788  0788  0471               	iorwf	SPI_init@idle,w
   789  0789  1283               	bcf	3,5	;RP0=0, select bank0
   790  078A  1303               	bcf	3,6	;RP1=0, select bank0
   791  078B  0094               	movwf	20	;volatile
   792  078C  0008               	return
   793  078D                     __end_of_SPI_init:	
   794  007E                     btemp	set	126	;btemp
   795  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SPI_init

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     375
                                              4 COMMON     2     2      0
                           _SPI_init
                          _SPI_write
 ---------------------------------------------------------------------------------
 (1) _SPI_write                                            1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_init                                             4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_init
   _SPI_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       A      12        0.0%
ABS                  0      0       A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Feb 15 18:27:15 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        _BF 04A0  
                      l87 0787                       l903 07EC                       l825 0783  
                     l841 07AE                       l833 079A                       l861 07DE  
                     l855 07D2                       l847 07BE                       l863 07E4  
                     l865 07E0                       u207 07A7                       u217 07CB  
            __CFG_CPD$OFF 0000              __CFG_LVP$OFF 0000              __CFG_WRT$OFF 0000  
                    _main 078D                      btemp 007E                      start 0000  
           __CFG_IESO$OFF 0000                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _RCREG 001A                     _SPBRG 0099                     _PORTB 0006  
                   _TRISB 0086                     _TXREG 0019            __CFG_FCMEN$OFF 0000  
                   _order 0079           SPI_init@muestra 0070            __CFG_BOREN$OFF 0000  
        __end_of_SPI_init 078D                     status 0003                     wtemp0 007E  
      __size_of_SPI_write 0006            __CFG_MCLRE$OFF 0000           __initialization 07F5  
            __end_of_main 07F5                    ??_main 0074                    _TRISC3 043B  
                  _TRISC5 043D                    _SSPBUF 0013                    _SSPCON 0014  
          __CFG_PWRTE$OFF 0000              __pdataCOMMON 0079         __end_of_SPI_write 0779  
 __end_of__initialization 07FC              SPI_init@edge 0072              SPI_init@idle 0071  
            SPI_init@modo 0073            __pcstackCOMMON 0070                 ?_SPI_init 0070  
              __pmaintext 078D                ??_SPI_init 0073                   _SSPSTAT 0094  
                 __ptext1 0773                   __ptext2 0779             _recibido_pot1 0078  
           _recibido_pot2 0077      end_of_initialization 07FC                 _RCSTAbits 0018  
               _SPI_write 0773                 _TXSTAbits 0098             __pidataCOMMON 0772  
     start_initialization 07F5         __size_of_SPI_init 0014                ?_SPI_write 0070  
__CFG_FOSC$INTRC_NOCLKOUT 0000               __pbssCOMMON 0076                 ___latbits 0002  
           SPI_write@dato 0070               ??_SPI_write 0070            _bandera_enviar 0076  
                _SPI_init 0779         __CFG_BOR4V$BOR40V 0000             __size_of_main 0068  
